/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.ufpr.sistemapedidos.view;

import java.util.List;
import javax.swing.JOptionPane;
import org.ufpr.sistemapedidos.model.dao.ProdutoDAO;
import org.ufpr.sistemapedidos.model.entity.ItemDoPedido;
import org.ufpr.sistemapedidos.model.entity.Produto;
import org.ufpr.sistemapedidos.model.tabela.ModeloTabelaItensPedido;
import org.ufpr.sistemapedidos.model.tabela.ModeloTabelaProdutos;

/**
 *
 * @author samue
 */
public class TelaPedidos extends javax.swing.JInternalFrame {

    /**
     * Creates new form TelaPedidos
     */
    private ModeloTabelaProdutos modeloTabelaProdutos;
    private ModeloTabelaItensPedido modeloTabelaItensPedido;
    private int linhaClicadaProdutos = -1;
    private int linhaClicadaItensPedido = -1;

    public TelaPedidos() {
        modeloTabelaProdutos = new ModeloTabelaProdutos();
        modeloTabelaItensPedido = new ModeloTabelaItensPedido();
        initComponents();
        this.setTitle("Cadastro de Pedidos");

        try {
            ProdutoDAO dao = new ProdutoDAO();
            List<Produto> lista = dao.getLista();
            modeloTabelaProdutos.setListaProdutos(lista);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Erro ao conectar com o banco de dados.", "Erro", JOptionPane.ERROR_MESSAGE);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scrollPanel = new javax.swing.JScrollPane();
        tabelaProdutosDisp = new javax.swing.JTable();
        listar = new javax.swing.JButton();
        excluir = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        novo = new javax.swing.JButton();
        atualizar = new javax.swing.JButton();
        scrollPanel1 = new javax.swing.JScrollPane();
        tabelaItensPedido = new javax.swing.JTable();
        limpar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();

        tabelaProdutosDisp.setModel(modeloTabelaProdutos);
        tabelaProdutosDisp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaProdutosDispMouseClicked(evt);
            }
        });
        scrollPanel.setViewportView(tabelaProdutosDisp);

        listar.setText("Incluir Selecionado");
        listar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                listarActionPerformed(evt);
            }
        });

        excluir.setText("Buscar");
        excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                excluirActionPerformed(evt);
            }
        });

        novo.setText("Excluir Selecionado");
        novo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                novoActionPerformed(evt);
            }
        });

        atualizar.setText("Salvar");
        atualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarActionPerformed(evt);
            }
        });

        tabelaItensPedido.setModel(modeloTabelaItensPedido);
        tabelaItensPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaItensPedidoMouseClicked(evt);
            }
        });
        scrollPanel1.setViewportView(tabelaItensPedido);

        limpar.setText("Limpar");
        limpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limparActionPerformed(evt);
            }
        });

        jLabel1.setText("Itens do Pedido:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(novo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(limpar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(atualizar))
                    .addComponent(scrollPanel1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(scrollPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(novo)
                    .addComponent(atualizar)
                    .addComponent(limpar))
                .addContainerGap())
        );

        jLabel2.setText("CPF Cliente:");

        jLabel3.setText("Produtos Dispon√≠veis:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPanel)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(listar)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(excluir)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(excluir))
                .addGap(21, 21, 21)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tabelaProdutosDispMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaProdutosDispMouseClicked
        //Pega a linha clicada
        linhaClicadaProdutos = tabelaProdutosDisp.rowAtPoint(evt.getPoint());
        //Pega o produto da linha clidada
        Produto produto = modeloTabelaProdutos.getProduto(linhaClicadaProdutos);
        //Seta os dados nos componentes
//        txtAreaDescricaoProduto.setText(produto.getDescricao());
        //        SimpleDateFormat sf = new SimpleDateFormat("dd/MM/yyyy");

        //        data.setText(sf.format(produto.getDataNascimento().getTime()));
        //        email.setText(produto.getEmail());
        //        endereco.setText(produto.getEndereco());
    }//GEN-LAST:event_tabelaProdutosDispMouseClicked

    private void listarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_listarActionPerformed
//        try {
//            ProdutoDAO dao = new ProdutoDAO();
//            List<Produto> lista = dao.getLista();
//            modeloTabela.setListaProdutos(lista);
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(null, "Erro ao conectar com o banco de dados.", "Erro", JOptionPane.ERROR_MESSAGE);
//        }
    }//GEN-LAST:event_listarActionPerformed

    private void limparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limparActionPerformed
//        modeloTabela.limpaTabela();
    }//GEN-LAST:event_limparActionPerformed

    private void excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_excluirActionPerformed
//        try {
//            ProdutoDAO dao = new ProdutoDAO();
//            int[] linhasSelecionadas = tabelaProdutosDisp.getSelectedRows();
//            List<Produto> listaExcluir = new ArrayList();
//            for (int i = 0; i < linhasSelecionadas.length; i++) {
//                Produto produto = modeloTabela.getProduto(linhasSelecionadas[i]);
//                dao.excluir(produto);
//                listaExcluir.add(produto);
//                txtAreaDescricaoProduto.setText(null);
//
//            }
//            for (Produto produto : listaExcluir) {
//                modeloTabela.removeProduto(produto);
//            }
//
//        } catch (SQLException ex) {
//            Logger.getLogger(TelaProdutos.class.getName()).log(Level.SEVERE, null, ex);
//            JOptionPane.showMessageDialog(null, "Erro ao realtabelaProdutosDispxclus√£o de produtos.", "Erro", JOptionPane.ERROR_MESSAGE);
//        }
    }//GEN-LAST:event_excluirActionPerformed

    private void novoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_novoActionPerformed
        Produto produto = new Produto();
        //        SimpleDateFormat sf = new SimpleDateFormat("dd/MM/yyyy");
        //        Calendar cal = Calendar.getInstance();
        //        try {
        //            cal.setTime(sf.parse(data.getText()));
        //        } catch (ParseException ex) {
        //            JOptionPane.showMessageDialog(null,"Erro ao converter as datas.", "Erro", JOptionPane.ERROR_MESSAGE);
        //        }
        //        produto.setDataNascimento(cal);
//        produto.setDescricao(txtAreaDescricaoProduto.getText());
//        ProdutoDAO dao = null;
//        try {
//            dao = new ProdutoDAO();
//            dao.adicionar(produto);
//            txtAreaDescricaoProduto.setText(null);
//        } catch (Exception ex) {
//            JOptionPane.showMessageDialog(null, "Erro ao atualizar no banco de dados. E=" + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
//        }
//        modeloTabela.adicionaProduto(produto);
    }//GEN-LAST:event_novoActionPerformed

    private void atualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarActionPerformed
//        if (linhaClicada != -1) {
//            Produto produto = modeloTabela.getProduto(linhaClicada);
//
//            produto.setDescricao(txtAreaDescricaoProduto.getText());
//            ProdutoDAO dao = null;
//            try {
//                dao = new ProdutoDAO();
//                dao.atualizar(produto);
//            } catch (Exception ex) {
//                JOptionPane.showMessageDialog(null, "Erro ao atualizar no banco de dados. E=" + ex.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
//            }
//            //Atualiza tabela
//            modeloTabela.fireTableRowsUpdated(linhaClicada, linhaClicada);
//
//        }
    }//GEN-LAST:event_atualizarActionPerformed

    private void tabelaItensPedidoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaItensPedidoMouseClicked

        //Pega a linha clicada
        linhaClicadaItensPedido = tabelaItensPedido.rowAtPoint(evt.getPoint());
        //Pega o produto da linha clidada
        ItemDoPedido item = modeloTabelaItensPedido.getItemDoPedido(linhaClicadaProdutos);
    }//GEN-LAST:event_tabelaItensPedidoMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton atualizar;
    private javax.swing.JButton excluir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton limpar;
    private javax.swing.JButton listar;
    private javax.swing.JButton novo;
    private javax.swing.JScrollPane scrollPanel;
    private javax.swing.JScrollPane scrollPanel1;
    private javax.swing.JTable tabelaItensPedido;
    private javax.swing.JTable tabelaProdutosDisp;
    // End of variables declaration//GEN-END:variables
}
